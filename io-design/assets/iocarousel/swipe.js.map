{"version":3,"sources":["swipe.js"],"names":["Swipe","element","_classCallCheck","this","xDown","yDown","document","querySelector","addEventListener","evt","touches","clientX","clientY","bind","callback","onRight","onUp","onDown","xUp","yUp","xDiff","yDiff","Math","abs","onLeft","handleTouchMove"],"mappings":"6XAAMA,iBACF,SAAAA,EAAYC,GAASC,gBAAAC,KAAAH,GACjBG,KAAKC,MAAQ,KACbD,KAAKE,MAAQ,KACbF,KAAKF,QAA8B,iBAAbA,EAAwBK,SAASC,cAAcN,GAAWA,EAJlFD,KAMOC,QAAQO,iBAAiB,aAAc,SAASC,GALzDN,KAAAC,MAAYH,EAASS,QAAA,GAAAC,QAAAR,KAAAE,MAAAI,EAAAC,QAAA,GAAAE,SAQfC,KAAKV,OAAO,uDAIXW,GALC,OAFJX,KAAKF,OAAQO,EAETL,qCAWAW,GAGJ,OAFAX,KAAKY,QAAUD,EAERX,kCANPW,GAYA,OAXHX,KAAAa,KAAAF,EAWUX,oCAGJW,GAGH,OAZAX,KAAAc,OAAOH,EAYAX,6CARFa,GAYL,GAAOb,KAAKC,OAAWD,KAAKE,MAA5B,CAIA,IAAIa,EAAMT,EAAIC,QAAQ,GAAGC,QACrBQ,EAAMV,EAAIC,QAAQ,GAZnBI,QAcHX,KAAKiB,MAAQjB,KAAKC,MAAQc,EAX1Bf,KAAAkB,MAAOlB,KAAPE,MAAAc,EAcKG,KAAKC,IAAKpB,KAAKiB,OAAUE,KAAKC,IAAKpB,KAAKkB,OACpClB,KAAKiB,MAAQ,EACdjB,KAAKqB,SAXTrB,KAAAY,UAGAG,KAAMT,MAONN,KAAAC,MAAK,KACDD,KAAAE,MAAA,oCAIPF,KANDF,QAMOO,iBAAA,YAAA,SAAAC,GACHN,KAAAsB,gBAAkBhB,IACdI,KAAAV,OAAA","file":"swipe.js","sourcesContent":["class Swipe {\r\n    constructor(element) {\r\n        this.xDown = null;\r\n        this.yDown = null;\r\n        this.element = typeof(element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        this.element.addEventListener('touchstart', function(evt) {\r\n            this.xDown = evt.touches[0].clientX;\r\n            this.yDown = evt.touches[0].clientY;\r\n        }.bind(this), false);\r\n\r\n    }\r\n \r\n    onLeft(callback) {\r\n        this.onLeft = callback;\r\n\r\n        return this;\r\n    }\r\n\r\n    onRight(callback) {\r\n        this.onRight = callback;\r\n\r\n        return this;\r\n    }\r\n\r\n    onUp(callback) {\r\n        this.onUp = callback;\r\n\r\n        return this;\r\n    }\r\n\r\n    onDown(callback) {\r\n        this.onDown = callback;\r\n\r\n        return this;\r\n    }\r\n\r\n    handleTouchMove(evt) {\r\n        if ( ! this.xDown || ! this.yDown ) {\r\n            return;\r\n        }\r\n\r\n        var xUp = evt.touches[0].clientX;\r\n        var yUp = evt.touches[0].clientY;\r\n\r\n        this.xDiff = this.xDown - xUp;\r\n        this.yDiff = this.yDown - yUp;\r\n\r\n        if ( Math.abs( this.xDiff ) > Math.abs( this.yDiff ) ) { // Most significant.\r\n            if ( this.xDiff > 0 ) {\r\n                this.onLeft();\r\n            } else {\r\n                this.onRight();\r\n            }\r\n        } else {\r\n            if ( this.yDiff > 0 ) {\r\n                /*this.onUp();*/\r\n            } else {\r\n                /*this.onDown();*/\r\n            }\r\n        }\r\n\r\n        // Reset values.\r\n        this.xDown = null;\r\n        this.yDown = null;\r\n    }\r\n\r\n    run() {\r\n        this.element.addEventListener('touchmove', function(evt) {\r\n            this.handleTouchMove(evt);\r\n        }.bind(this), false);\r\n    }\r\n}"]}